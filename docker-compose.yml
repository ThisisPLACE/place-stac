version: '3'
services:

  server:
    container_name: place-stac-server
    build:
      context: .
      dockerfile: Dockerfile
    platform: linux/amd64
    environment:
      - APP_HOST=0.0.0.0
      - APP_PORT=8082
      - RELOAD=true
      - ENVIRONMENT=local
      - POSTGRES_USER=username
      - POSTGRES_PASS=password
      - POSTGRES_DBNAME=postgis
      - POSTGRES_HOST_READER=database
      - POSTGRES_HOST_WRITER=database
      - POSTGRES_PORT=5432
      - WEB_CONCURRENCY=10
      - VSI_CACHE=TRUE
      - GDAL_HTTP_MERGE_CONSECUTIVE_RANGES=YES
      - GDAL_DISABLE_READDIR_ON_OPEN=EMPTY_DIR
      - DB_MIN_CONN_SIZE=1
      - DB_MAX_CONN_SIZE=1
      - USE_API_HYDRATE=${USE_API_HYDRATE:-false}
    ports:
      - "8082:8082"
    volumes:
      - ./place:/app/place
      - ./scripts:/app/scripts
    depends_on:
      - database
    command:
      bash -c "./scripts/wait-for-it.sh database:5432 && python -m place.place-server.serve"
  database:
    container_name: place-stac-db
    image: ghcr.io/stac-utils/pgstac:v0.6.7
    environment:
      - POSTGRES_USER=username
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgis
      - PGUSER=username
      - PGPASSWORD=password
      - PGHOST=localhost
      - PGDATABASE=postgis
    ports:
      - "5439:5432"
    command: postgres -N 500
    # Load joplin demo dataset into the PGStac Application
  load-place:
    image: place-stac-server
    environment:
      - ENVIRONMENT=development
      - PGUSER=username
      - PGPASSWORD=password
      - PGHOST=database
      - PGDATABASE=postgis
    volumes:
      - ./stac_fastapi:/app/stac_fastapi
      - ./scripts:/app/scripts
    command:
      - "./scripts/wait-for-it.sh"
      - "server:8082"
      - "--"
      - "python"
      - "/app/scripts/ingest_place.py"
      - "http://datab:8082"
    depends_on:
      - database
      - server
  titiler:
    # See https://github.com/developmentseed/titiler/discussions/387
    container_name: place-stac-titiler
    platform: linux/amd64
    build:
      context: .
      dockerfile: place/dockerfiles/Dockerfile.uvicorn
    ports:
      - "8000:8000"
    environment:
      # Application
      - HOST=0.0.0.0
      - PORT=8000
      # Uvicorn
      # http://www.uvicorn.org/settings/#production
      - WEB_CONCURRENCY=1
      # GDAL config
      - CPL_TMPDIR=/tmp
      - GDAL_CACHEMAX=75%
      - GDAL_INGESTED_BYTES_AT_OPEN=32768
      - GDAL_DISABLE_READDIR_ON_OPEN=EMPTY_DIR
      - GDAL_HTTP_MERGE_CONSECUTIVE_RANGES=YES
      - GDAL_HTTP_MULTIPLEX=YES
      - GDAL_HTTP_VERSION=2
      - GDAL_DISABLE_READDIR_ON_OPEN=EMPTY
      - PYTHONWARNINGS=ignore
      - VSI_CACHE=TRUE
      - VSI_CACHE_SIZE=536870912
      - AWS_NO_SIGN_REQUEST=TRUE
      - AWS_S3_ENDPOINT=s3.af-south-1.amazonaws.com
      - AWS_REGION=af-south-1
      # GDAL VSI Config
      # https://gdal.org/user/virtual_file_systems.html#vsis3-aws-s3-files
      # https://gdal.org/user/virtual_file_systems.html#vsigs-google-cloud-storage-files
      # https://gdal.org/user/virtual_file_systems.html#vsiaz-microsoft-azure-blob-files
      # - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      # - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      # TiTiler config
      # - TITILER_API_DISABLE_STAC=TRUE/FALSE
      # - TITILER_API_DISABLE_MOSAIC=TRUE/FALSE
      # - TITILER_API_DISABLE_COG=TRUE/FALSE
      # - TITILER_API_CORS_ORIGIN=url.io,url.xyz
      # - TITILER_API_CACHECONTROL=public, max-age=3600
      # - TITILER_API_DEBUG=TRUE/FALSE
      # - MOSAIC_CONCURRENCY= # will default to `RIO_TILER_MAX_THREADS`
      # rio-tiler config
      # - RIO_TILER_MAX_THREADS=
